<?php

class PatientController extends \BaseController {

    protected $patient;
    
    public function __construct(Patient $patient){
        $this->patient = $patient;
    }



	/**
	 * Display a listing of the resource.
	 *
	 * @return Response
	 */
	public function index()
	{
		//appel des composants en base
    	$patients = Patient::all();
    	
    	//retour de la vue
    	return View::make('backend.patient.list', compact('patients'));
	}

	/**
	 * Display the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function show($login)
	{
	    $patient = $this->patient->whereLogin($login)->first();
        return View::make('Patient.show', ['patient' => $patient]);
	}


	/**
	 * Show the form for creating a new resource.
	 *
	 * @return Response
	 */
	public function create()
	{
	    //retour de la vue
    	return View::make('backend.patient.new');
	}


	/**
	 * Store a newly created resource in storage.
	 *
	 * @return Response
	 */
	public function store()
	{
	    $input = Input::all();	
	    $this->patient->fill($input);//
        //je recuperer les donnÃ©es post, remplis l'object, puis test
	    /*if( ! $this->patient->fill($input)->isValid() ){
    	    return Redirect::back()->withInput()->withErrors($this->patient->errors);
	    }*/
	
        //si la validation passe on sauvegarde
		$this->patient->save();
		
		return Redirect::route('/backend');
		
		
	}


	/**
	 * Show the form for editing the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function edit($id)
	{
		$patient = $this->patient->whereId($id)->first();
        return View::make('backend.patient.edit', ['patient' => $patient]);
	}


	/**
	 * Update the specified resource in storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function update($id)
	{
		$patient = $this->patient->whereId($id)->first();
		$input = Input::all();	
	    $this->patient->fill($input);
	    
	    $this->patient->save();
		
		return Redirect::route('backend.patient.edit', $id);
	}


	/**
	 * Remove the specified resource from storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function destroy($id)
	{
		//
	}


}
